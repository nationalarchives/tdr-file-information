library("tdr-jenkinslib")

def versionTag = "v${env.BUILD_NUMBER}"
def repo = "tdr-file-metadata"

pipeline {
  agent {
    label "built-in"
  }
  stages {
    stage("Run git secrets") {
      steps {
        script {
          tdr.runGitSecrets(repo)
        }
      }
    }
    stage("Run tests") {
      agent {
        ecs {
          inheritFrom "npm"
        }
      }
      steps {
        script {
          tdr.reportStartOfBuildToGitHub(repo, env.GIT_COMMIT)
        }
        checkout scm
        sh 'npm ci'
        sh 'npm test'
	    sh 'npm run lint'
      }
    }
    stage('Post-build') {
      when {
        expression { env.BRANCH_NAME == "master"}
      }
      stages {
        stage('Tag Release') {
          steps {
            sh "git tag ${versionTag}"
            sshagent(['github-jenkins']) {
              sh("git push origin ${versionTag}")
            }
          }
        }
        stage('Publish package') {
          steps {
            build(
                  job: "TDR File Metadata Publish",
                  parameters: [
                    string(name: "VERSION", value: "patch")
                  ],
                  wait: false)
          }
        }
      }
    }
  }
  post {
    failure {
      script {
        tdr.reportFailedBuildToGitHub(repo, env.GIT_COMMIT)
      }
    }
    success {
      script {
        tdr.reportSuccessfulBuildToGitHub(repo, env.GIT_COMMIT)
      }
    }
  }
}
