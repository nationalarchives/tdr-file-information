library(tdr-jenkinslib)

def versionBumpBranch = "version-bump-${BUILD_NUMBER}-${params.VERSION}"

pipeline {
  agent none

  parameters {
    choice(name: "VERSION", choices: ["patch", "minor", "major"], description: "The stage you are building the front end for")
  }
  stages {
    stage("Publish package") {
      agent {
        ecs {
          inheritFrom "npm"
        }
      }
      stages {
        stage("Create and push version bump GitHub branch") {
          steps {
            script {
              tdr.configureJenkinsGitUser()
            }
            sh "git checkout -b ${versionBumpBranch}"

            tdr.pushGitHubBranch(versionBumpBranch)
          }
        }
        stage("Update npm version") {
          steps {
            sh 'npm ci'
            sh 'npm run build:prod'

            //commits change to the origin branch
            sshagent(['github-jenkins']) {
              sh "npm version ${params.VERSION}"
            }

            withCredentials([string(credentialsId: 'npm-login', variable: 'LOGIN_TOKEN')]) {
              sh "npm config set //registry.npmjs.org/:_authToken=$LOGIN_TOKEN"
              sh 'npm publish --access public'
            }
          }
        }
      }
    }
    stage("Create version bump pull request") {
      agent {
        label "master"
      }
      steps {
        script {
          tdr.createGitHubPullRequest(
            pullRequestTitle: "Version Bump from build number ${BUILD_NUMBER}",
            buildUrl: env.BUILD_URL,
            repo: "tdr-file-metadata",
            branchToMergeTo: "master",
            branchToMerge: versionBumpBranch
          )
        }
      }
    }
  }
}
